// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "windows", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PostStatus {
  NEW
  READED
  SENT
  DONE
}

model User {
  id             String   @id @default(uuid())
  name           String
  email          String   @unique
  password_hash  String
  created_at     DateTime @default(now())
  
  UserPostStatus UserPostStatus[]

  @@map("users")
}

model Post {
  id                            String     @id @default(uuid())
  text                          String
  numero_processo               String
  autores                       String[]
  advogados                     String[]
  valor_principal_bruto_liquido String? //Utilizei string nos valores pois como são valores imutáveis,
  valor_juros_moratorios        String? //não necessitam de cálculos e podem ser armazenados como texto
  honorarios_advocaticios       String?
  reu                           String?    @default("Instituto Nacional do Seguro Social - INSS")
  data_publicacao               DateTime   @db.Date
  created_at                    DateTime   @default(now())

  postStatus                    UserPostStatus[]
  
  @@index([data_publicacao]) // indexação para facilitar busca 
  @@index([autores])
  @@index([advogados])
  @@index([numero_processo])
  @@map("posts")
}


model UserPostStatus {
  id        String     @id @default(uuid())
  userId    String
  postId    String
  status    PostStatus @default(NEW)
  updatedAt DateTime   @default(now()) @updatedAt

  user      User       @relation(fields: [userId], references: [id])
  post      Post       @relation(fields: [postId], references: [id])

  @@unique([userId, postId])

  @@map("user-post-status")
}